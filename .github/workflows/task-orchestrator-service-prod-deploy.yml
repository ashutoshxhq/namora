name: Deploy Task Orchestrator Service to Production
on:
  push:
    paths:
      - 'apps/task-orchestrator.svc.api.namora.ai/**'
    branches:
      - main
jobs:
  run:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-west-2
      KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      KUBE_NAMESPACE: default
      ECR_REPOSITORY: task-orchestrator-service
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx                             
        id: buildx                                             
        uses: docker/setup-buildx-action@v2

      - name: Docker cache layers                              
        uses: actions/cache@v2                                 
        with:                                                  
          path: /tmp/.buildx-cache                             
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |                                      
            ${{ runner.os }}-single-buildx   

      - name: Build & Push Image                                                                                      
        uses: docker/build-push-action@v4
        env:                                                                                                          
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}                                                       
          RELEASE_IMAGE: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        with: 
          context: "{{defaultContext}}:apps/task-orchestrator.svc.api.namora.ai"
          build-contexts: |
            libs=libs
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}, latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Deploy to Kubernetes cluster                                                                            
        uses: kodermax/kubectl-aws-eks@master                                                                         
        env:                                                                                                          
          RELEASE_IMAGE: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        with:                                                                                                         
          args: set image deployment/task-orchestrator-service-deployment task-orchestrator-service-pod=${{ env.RELEASE_IMAGE }} --record -n $KUBE_NAMESPACE   
      
      - name: Verify Kubernetes deployment                               
        uses: kodermax/kubectl-aws-eks@master                            
        with:                                                            
          args: rollout status deploy task-orchestrator-service-deployment -n $KUBE_NAMESPACE